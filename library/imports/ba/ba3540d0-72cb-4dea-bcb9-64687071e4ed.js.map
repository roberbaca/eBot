{"version":3,"sources":["assets\\Script\\Player.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport GameController from \"./GameController\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component \r\n{ \r\n \r\n // declaracion de variables \r\n\r\n // banderas para determinar direccion del personaje\r\n isLeft: boolean = false;\r\n isRight: boolean = false;\r\n isDown: boolean = false;\r\n isUp: boolean = false;\r\n \r\n lookLeft: boolean = false;\r\n lookRight: boolean = false;\r\n lookDown: boolean = true;\r\n lookUp: boolean = false;\r\n\r\n canMoveRight: boolean = true;\r\n canMoveLeft: boolean = true;\r\n canMoveUp: boolean = true;\r\n canMoveDown: boolean = true;\r\n canMove: boolean = true;\r\n\r\n // animaciones\r\n walkRightAnimation : cc.AnimationState;\r\n walkLeftAnimation : cc.AnimationState; \r\n idleAnimation : cc.AnimationState;\r\n shutDownAnimation : cc.AnimationState;\r\n explodenAnimation : cc.AnimationState;\r\n shuttedAnimation : cc.AnimationState;\r\n  \r\n\r\n // movimiento\r\n velocityX: number = 0;\r\n velocityY: number = 0;\r\n maxVel: number = 4;   \r\n acc: number = 2; \r\n\r\n // posicion original\r\n originX: number;\r\n originY: number;      \r\n\r\n  // banderas para las llaves\r\n isYellowKey: boolean = false;\r\n\r\n // banderas para los powerUps\r\n \r\n isPotion: boolean = false;\r\n \r\n\r\n // asignamos el componente del GameController\r\n gameController: GameController = null;\r\n\r\n isGameOver: boolean = false;\r\n\r\n destroyEnemy: boolean = false;\r\n\r\n isShutDown: boolean = false;   // bandera para inactivar al personaje\r\n isOriginal: boolean = true;    // bandera para identificar al bot activo\r\n isExploding: boolean = false;\r\n finished: boolean = false;\r\n\r\n\r\n @property(cc.AudioSource)\r\n explosionSound: cc.AudioSource = null;\r\n\r\n @property(cc.AudioSource)\r\n powerOffSound: cc.AudioSource = null;\r\n\r\n\r\n\r\n // eventos del teclado\r\n movePlayer(event)\r\n{\r\n    switch(event.keyCode)\r\n    {\r\n        case cc.macro.KEY.left:\r\n            this.isLeft = true;\r\n            this.lookLeft = true;\r\n            this.lookRight = false;\r\n            this.lookUp   = false;\r\n            this.lookDown = false;\r\n            break;\r\n\r\n        case cc.macro.KEY.right:\r\n            this.isRight = true;\r\n            this.lookLeft = false;\r\n            this.lookRight = true;\r\n            this.lookUp   = false;\r\n            this.lookDown = false;             \r\n            break;\r\n\r\n         case cc.macro.KEY.up:\r\n             this.isUp = true;\r\n             this.lookLeft = false;\r\n             this.lookRight = false;\r\n             this.lookUp   = true;\r\n             this.lookDown = false;           \r\n             break;\r\n\r\n         case cc.macro.KEY.down:\r\n             this.isDown = true;\r\n             this.lookLeft = false;\r\n             this.lookRight = false;\r\n             this.lookUp   = false;\r\n             this.lookDown = true;        \r\n             break;\r\n\r\n         case cc.macro.KEY.ctrl:\r\n             this.isExploding = true;             \r\n             break;\r\n\r\n         case cc.macro.KEY.s:\r\n             this.isShutDown = true;\r\n             break;\r\n     }\r\n }\r\n\r\n stopPlayer(event)\r\n {     \r\n     switch(event.keyCode)\r\n     {\r\n         case cc.macro.KEY.left:\r\n             this.isLeft = false;\r\n             break;\r\n         case cc.macro.KEY.right:\r\n             this.isRight = false;\r\n             break;\r\n         case cc.macro.KEY.up:\r\n             this.isUp = false;\r\n             break;\r\n         case cc.macro.KEY.down:\r\n             this.isDown = false;\r\n             break;         \r\n     }     \r\n }\r\n\r\n \r\n onLoad () \r\n {      \r\n     cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN,this.movePlayer,this);\r\n     cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP,this.stopPlayer,this);    \r\n     this.gameController = cc.Canvas.instance.node.getComponent(\"GameController\");   \r\n     \r\n     this.walkLeftAnimation = this.getComponent( cc.Animation ).getAnimationState('walkLeft');\r\n     this.walkRightAnimation = this.getComponent( cc.Animation ).getAnimationState('walkRight');\r\n     this.idleAnimation = this.getComponent( cc.Animation ).getAnimationState('idle');    \r\n     this.shutDownAnimation = this.getComponent( cc.Animation ).getAnimationState('shutDown');\r\n     this.shuttedAnimation = this.getComponent( cc.Animation ).getAnimationState('shutted');\r\n     this.explodenAnimation = this.getComponent( cc.Animation ).getAnimationState('explode');        \r\n }\r\n\r\n start () \r\n {\r\n     this.originX = this.node.position.x;\r\n     this.originY = this.node.position.y;\r\n     this.isShutDown = false;\r\n }\r\n\r\n update(dt)\r\n {             \r\n\r\n    // Se apaga el robot\r\n    if (this.isShutDown)\r\n    {\r\n        if (!this.shuttedAnimation.isPlaying)\r\n        {\r\n            this.shutDownAnimation.play();             \r\n        }        \r\n        this.powerOffSound.play();   \r\n        this.gameController.newClone();\r\n        this.isOriginal = false;\r\n        this.isShutDown = false;        \r\n    }\r\n    \r\n    // Autodestruccion = Countdown + Explosion\r\n    if (this.isExploding && this.isOriginal)\r\n    {\r\n        this.gameController.createAnewOne = true;        \r\n        this.schedule(this.explodeCountdown, 2.7, 0);       \r\n        this.explodenAnimation.play();\r\n        this.isExploding = false;                \r\n    }\r\n     \r\n     // Limito la velocidad para que no se acelere de forma infinita\r\n     if (this.velocityX <= (-this.maxVel))\r\n     {\r\n         this.velocityX = -this.maxVel;\r\n     }\r\n\r\n     if (this.velocityX >= this.maxVel)\r\n     {\r\n         this.velocityX = this.maxVel;\r\n     }        \r\n     \r\n     if (this.velocityY <= (-this.maxVel))\r\n     {\r\n         this.velocityY = -this.maxVel;\r\n     }\r\n \r\n     if (this.velocityY >= this.maxVel)\r\n     {\r\n         this.velocityY = this.maxVel;\r\n     }\r\n\r\n\r\n    if (!this.gameController.isLevelCompleted)\r\n    {\r\n        if (this.isOriginal && !this.isExploding && !this.isShutDown && !this.explodenAnimation.isPlaying) \r\n        {\r\n            // move left\r\n            if (this.isLeft && this.canMoveLeft) \r\n            {\r\n                this.node.setPosition(this.node.position.x += this.velocityX,this.node.position.y);\r\n                this.velocityX -= this.acc; // MRUV\r\n                this.velocityY = 0;\r\n                this.walkLeftAnimation.play();                   \r\n            }\r\n     \r\n            // move right\r\n            else if (this.isRight && this.canMoveRight)\r\n            {\r\n                this.node.setPosition(this.node.position.x += this.velocityX,this.node.position.y);\r\n                this.velocityX += this.acc; // MRUV\r\n                this.velocityY = 0;  \r\n                this.walkRightAnimation.play();        \r\n            }\r\n\r\n            // move up\r\n            else if(this.isUp && this.canMoveUp)\r\n            {\r\n                //this.node.setPosition(this.node.position.x,this.node.position.y += this.velocityY);\r\n                //this.velocityY += this.acc; // MRUV\r\n                //this.velocityX = 0;     \r\n                //this.walkUpAnimation.play(); \r\n            } \r\n\r\n            // move down\r\n            else if(this.isDown && this.canMoveDown)\r\n            {\r\n                //this.node.setPosition(this.node.position.x,this.node.position.y += this.velocityY);\r\n                //this.velocityY -= this.acc; // MRUV\r\n                //this.velocityX = 0; \r\n                //this.walkDownAnimation.play();              \r\n            }  \r\n\r\n            else if (!this.isLeft && !this.isRight)\r\n            {\r\n                this.idleAnimation.play();\r\n            }        \r\n        }\r\n    }\r\n\r\n        if (!this.isShutDown && !this.isOriginal && !this.isExploding)\r\n        {\r\n            if (!this.shutDownAnimation.isPlaying)\r\n            {\r\n                this.shuttedAnimation.play();\r\n            }\r\n        }          \r\n\r\n}\r\n\r\n\r\n\r\n \r\n onCollisionEnter(otherCollider,selfCollider)\r\n {   \r\n\r\n    if (otherCollider.name == \"exit<BoxCollider>\")\r\n    {       \r\n        //this.isGameOver = true;\r\n        this.schedule(this.ending, 0.7 ,0);\r\n        cc.log(\"THE END\");\r\n    }\r\n    \r\n\r\n     // bloques     \r\n    if (otherCollider.name == \"bloque<BoxCollider>\" && this.isRight)\r\n    {\r\n        this.canMoveRight = false;\r\n    }\r\n\r\n    if (otherCollider.name == \"bloque<BoxCollider>\" && this.isLeft)\r\n    {\r\n        this.canMoveLeft = false;\r\n    }\r\n\r\n    if (otherCollider.name == \"bloque<BoxCollider>\" && this.isDown)\r\n    {\r\n        this.canMoveDown = false;\r\n    }\r\n\r\n    if (otherCollider.name == \"bloque<BoxCollider>\" && this.isUp)\r\n    {\r\n        this.canMoveUp = false;\r\n    }  \r\n\r\n\r\n     // Walls     \r\n    if (otherCollider.name == \"obstacle copy<BoxCollider>\" && this.isRight)\r\n    {\r\n        this.canMoveRight = false;\r\n    }\r\n\r\n    if (otherCollider.name == \"obstacle copy<BoxCollider>\" && this.isLeft)\r\n    {\r\n        this.canMoveLeft = false;\r\n    }\r\n\r\n    if (otherCollider.name == \"obstacle copy<BoxCollider>\" && this.isDown)\r\n    {\r\n        this.canMoveDown = false;\r\n    }\r\n\r\n    if (otherCollider.name == \"obstacle copy<BoxCollider>\" && this.isUp)\r\n    {\r\n        this.canMoveUp = false;\r\n    }\r\n\r\n\r\n    // Collision with player\r\n    if (otherCollider.name == \"player<BoxCollider>\" && this.isRight)\r\n    {\r\n        this.canMoveRight = false;\r\n    }\r\n\r\n    if (otherCollider.name == \"player<BoxCollider>\" && this.isLeft)\r\n    {\r\n        this.canMoveLeft = false;\r\n    }\r\n\r\n    if (otherCollider.name == \"player<BoxCollider>\" && this.isDown)\r\n    {\r\n        this.canMoveDown = false;\r\n    }\r\n\r\n    if (otherCollider.name == \"player<BoxCollider>\" && this.isUp)\r\n    {\r\n        this.canMoveUp = false;\r\n    }  \r\n \r\n }\r\n\r\n    onCollisionExit(otherCollider,selfCollider)\r\n    {         \r\n        if (otherCollider.name == \"obstacle copy<BoxCollider>\" || otherCollider.name == \"player<BoxCollider>\" || otherCollider.name == \"bloque<BoxCollider>\")\r\n        {\r\n            this.canMoveRight = true;\r\n            this.canMoveLeft = true;\r\n            this.canMoveUp = true;\r\n            this.canMoveDown = true;\r\n        }      \r\n\r\n        if (otherCollider.name == \"obstacle2<BoxCollider>\")\r\n        {\r\n            otherCollider.node.destroy();\r\n        }        \r\n    }  \r\n\r\n\r\n    onCollisionStay(otherCollider,selfCollider)\r\n    {\r\n        // si estamos en modo Autodestruccion y en contacto con otro robot. Iniciamos la fase de autodestruccion en ese robot.\r\n        if (otherCollider.name == \"player<BoxCollider>\" || otherCollider.name == \"bloque<BoxCollider>\")\r\n        {        \r\n            if (this.finished)            \r\n            {               \r\n                otherCollider.node.destroy();\r\n                this.explosionSound.play();    \r\n                this.finished = false;        \r\n            }                    \r\n        }\r\n\r\n        if (otherCollider.name == \"obstacle2<BoxCollider>\")\r\n        {\r\n           this.node.setPosition(this.node.position.x,this.node.position.y += this.velocityY);\r\n           this.velocityY -= this.acc; // MRUV\r\n           this.velocityX = 0;            \r\n        }\r\n\r\n        if (otherCollider.name == \"obstacle3<BoxCollider>\")\r\n        {           \r\n            this.node.setPosition(this.node.position.x,this.node.position.y += this.velocityY);\r\n            this.velocityY -= this.acc; // MRUV\r\n            this.velocityX = 0;                  \r\n        }\r\n    }\r\n\r\n\r\n    onExplosionEnd()\r\n    {\r\n        this.finished = true;\r\n    }\r\n \r\n\r\n    ending()\r\n    {\r\n        this.gameController.endLevel();\r\n        \r\n        //cc.director.loadScene('TheEnd');          \r\n    }   \r\n\r\n    explodeCountdown()\r\n    {     \r\n        this.isExploding = false;    \r\n        this.explosionSound.play();    \r\n        this.node.destroy();               \r\n    }\r\n}\r\n"]}